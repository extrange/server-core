# yaml-language-server: $schema=https://json.schemastore.org/traefik-v3.json
providers:
  docker:
    exposedByDefault: false
    network: server-core_default

    # If no router rule is specified, use the container name as the subdomain
    defaultRule: Host(`{{ index .Labels "com.docker.compose.service" }}.nicholaslyz.com`)
  file:
    directory: /etc/traefik/conf.d
    watch: true
api:
  disableDashboardAd: true
certificatesResolvers:
  leresolver:
    acme:
      storage: /etc/traefik/data/acme.json
      dnsChallenge:
        provider: cloudflare
log:
  level: INFO
  format: json

accessLog:
  format: json

entryPoints:
  http:
    address: ":80"
    http:
      redirections:
        entryPoint:
          scheme: https
          to: https
          permanent: true

  https:
    address: ":443"
    asDefault: true # If no default is specified, all entrypoints are added as the default (including the http entrypoint, which we don't want)
    reusePort: true # Allow our tailscale entrypoint to share this port
    transport:
      respondingTimeouts:
        # Fixes issues with long-running requests e.g. immich uploads
        # https://immich.app/docs/administration/reverse-proxy/#traefik-proxy-example-config
        readTimeout: 600s
        idleTimeout: 600s
        writeTimeout: 600s
    http3: {}
    http:
      middlewares:
        - no-index@file
        - security-headers@file
        - compress@file
      tls:
        certResolver: leresolver
        domains:
          - sans:
              - "*.nicholaslyz.com"
              - "*.angfamily.net"
  tailscale:
    # Requests via tailscale will be preferentially routed here, not over the https entrypoint
    # https://doc.traefik.io/traefik/routing/entrypoints/#reuseport
    #
    # Note: Internal services have to be marked with this entrypoint specifically, e.g.
    # traefik.http.routers.changedetection-io.entrypoints: tailscale
    #
    # Otherwise, the https entrypoint will instead be assigned, and requests through the entrypoint but with the internal service as the Host will work:
    # curl -vk --resolve changedetection-io.internal.nicholaslyz.com:443:116.14.95.248 https://changedetection-io.internal.nicholaslyz.com
    address: "100.107.7.24:443"
    reusePort: true
    http:
      tls:
        certResolver: leresolver
        domains:
          - sans:
              - "*.internal.nicholaslyz.com"
