services:
  traefik:
    image: traefik@sha256:4cf907247939b5d20bf4eff73abd21cb413c339600dde76dbc94a874b2578a27
    container_name: traefik
    network_mode: service:ts-traefik
    depends_on:
      ts-traefik:
        # Even though network_mode adds a dependency, we need healthchecks to pass otherwise we cannot bind to the tailscale iface
        condition: service_healthy
        restart: true
    volumes:
      - ./data/traefik:/etc/traefik/data
      - ./dynamic.yaml:/etc/traefik/conf.d/dynamic.yaml:ro
      - ./traefik.yaml:/etc/traefik/traefik.yaml:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      CF_DNS_API_TOKEN: ${TRAEFIK_CF_API_TOKEN}
      TRAEFIK_CERTIFICATESRESOLVERS_LERESOLVER_ACME_EMAIL: ${TRAEFIK_ACME_EMAIL}
    labels:
      homepage.group: Services
      homepage.name: Traefik
      homepage.icon: traefik
      homepage.href: &url https://traefik.internal.nicholaslyz.com
      homepage.siteMonitor: *url

  ts-traefik:
    image: tailscale/tailscale@sha256:9a1f2640beecac3ad42ed8ef03d75adcb7165600f5131b17f9a2a3da68505928
    restart: always
    hostname: ts-traefik # Tailscale uses this as the machine name
    ports:
      - "80:80"
      - "443:443/tcp"
      - "443:443/udp"
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://127.0.0.1:9002/healthz"]
      start_interval: 5s
      start_period: 30s
    environment:
      TS_AUTHKEY: ${TS_AUTH_KEY}
      TS_EXTRA_ARGS: --advertise-tags=tag:container
      TS_STATE_DIR: /var/lib/tailscale
      TS_USERSPACE: false # disable userspace networking, so we have the tailscale0 iface
      TS_ENABLE_HEALTH_CHECK: true
    volumes:
      - ./data/tailscale:/var/lib/tailscale
    devices:
      - /dev/net/tun:/dev/net/tun # enable tailscale0 iface
    cap_add:
      - net_admin
      - sys_module
